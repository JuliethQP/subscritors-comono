{"version":3,"sources":["components/Table.js","components/Fetch.js","index.js"],"names":["Table","object","className","map","item","key","id","name","lastName","age","sport","Fetch","useState","sortedName","setsortedName","sortAge","setsortAge","sortSport","setsortSport","subscritors","setSubscritors","loading","setLoading","useEffect","axios","get","then","res","data","console","log","catch","err","onClick","sort","a","b","ReactDOM","render","document","getElementById"],"mappings":"8NAiCeA,EA/BD,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEb,OACK,kBAAC,WAAD,KACI,yBAAKC,UAAU,kBACX,2BAAOA,UAAU,kDACb,+BACI,4BACI,oCACA,yCACA,mCACA,uCAIRD,EAAOE,KAAI,SAAAC,GAAI,OACX,2BAAOC,IAAKD,EAAKE,IACb,4BACI,4BAAMF,EAAKG,MACX,4BAAKH,EAAKI,UACV,4BAAKJ,EAAKK,KACV,4BAAKL,EAAKM,gB,uBCwC3BC,EA1DD,WAAM,MAGoBC,mBAAS,IAH7B,mBAGTC,EAHS,KAGGC,EAHH,OAIcF,mBAAS,IAJvB,mBAITG,EAJS,KAIAC,EAJA,OAKkBJ,mBAAS,IAL3B,mBAKTK,EALS,KAKEC,EALF,OA0BsBN,mBAAS,IA1B/B,mBA0BTO,EA1BS,KA0BIC,EA1BJ,OA2BcR,oBAAS,GA3BvB,mBA2BTS,EA3BS,KA2BAC,EA3BA,KA0ChB,OAbAC,qBAAU,WACNC,IAAMC,IAAI,gDACLC,MAAK,SAAAC,GACFL,GAAW,GACXF,EAAeO,EAAIC,KAAKT,aACxBU,QAAQC,IAAI,wBACZD,QAAQC,IAAIH,EAAIC,KAAKT,gBAExBY,OAAM,SAAAC,GACHH,QAAQC,IAAIE,QAErB,KAEa,IAAZX,EACO,2CAGP,oCACI,kBAAC,EAAD,CAAOpB,OAAQkB,IACf,yBAAKjB,UAAU,gCACX,yBAAKA,UAAU,OACX,4BAAQA,UAAU,yBAAyB+B,QAAS,kBAzChEnB,EAyCiFK,EAzC9De,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE5B,KAAO6B,EAAE7B,KAAQ,GAAK,MACnD,kBAAC,EAAD,CAAON,OAAQY,MAwCX,iBACA,4BAAQX,UAAU,6BAA6B+B,QAAS,kBApCpEjB,EAoCoFG,EApCpEe,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE1B,IAAM2B,EAAE3B,IAAO,GAAK,MAC9C,kBAAC,EAAD,CAAOR,OAAQc,MAmCX,gBACA,4BAAQb,UAAU,2BAA2B+B,QAAS,kBAhClEf,EAgCoFC,EAhClEe,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzB,MAAQ0B,EAAE1B,MAAS,GAAK,MACpD,kBAAC,EAAD,CAAOT,OAAQgB,MA+BX,sBC9CpBoB,IAASC,OACP,oCACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,W","file":"static/js/main.de77777f.chunk.js","sourcesContent":["import React, { Fragment} from 'react';\r\n\r\nconst Table = ({object} )=> {  \r\n\r\n   return (\r\n        <Fragment>           \r\n            <div className=\"container mt-5\">\r\n                <table className=\"table table-striped table-dark table-bordered \" >\r\n                    <thead>\r\n                        <tr >\r\n                            <td>Name</td>\r\n                            <td>Last Name</td>\r\n                            <td>Age</td>\r\n                            <td>Sport</td>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                    object.map(item => (\r\n                        <tbody key={item.id}>\r\n                            <tr>\r\n                                <td >{item.name}</td>\r\n                                <td>{item.lastName}</td>\r\n                                <td>{item.age}</td>\r\n                                <td>{item.sport}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    ))\r\n                    }\r\n                </table>\r\n            </div>   \r\n        </Fragment>\r\n    );\r\n}\r\nexport default Table;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table'\r\nimport Sort from './Sort'\r\n\r\nconst Fetch = () => {\r\n\r\n    /*Variable to save the sort data */\r\n    const [sortedName, setsortedName] = useState([])\r\n    const [sortAge, setsortAge] = useState([])\r\n    const [sortSport, setsortSport] = useState([])\r\n\r\n    /* Functions to sort data */\r\n    const SortbyName = (data) => {\r\n        setsortedName(data.sort((a, b) => (a.name > b.name) ? 1 : -1))\r\n        return (<Table object={sortedName} />)\r\n    }\r\n\r\n    const SortbyAge = (data) => {\r\n\r\n        setsortAge(data.sort((a, b) => (a.age > b.age) ? 1 : -1))\r\n        return (<Table object={sortAge} />)\r\n    }\r\n    const SortbySport = (data) => {\r\n\r\n        setsortSport(data.sort((a, b) => (a.sport > b.sport) ? 1 : -1))\r\n        return (<Table object={sortSport} />)\r\n    }\r\n    /* Functions to sort data*/\r\n\r\n    /*Declare variable to save the data of fetch */\r\n    const [subscritors, setSubscritors] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    /*We are telling React that the component has to do something after rendering*/\r\n    useEffect(() => {\r\n        axios.get('https://json-server-now-nine.now.sh/db.json/')\r\n            .then(res => {\r\n                setLoading(false)\r\n                setSubscritors(res.data.subscritors)\r\n                console.log('datos de la peticion')\r\n                console.log(res.data.subscritors)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    if (loading === true) {\r\n        return <h1>Loading....</h1>\r\n    }\r\n    return (\r\n        <>\r\n            <Table object={subscritors} />\r\n            <div className=\"container mx-auto  pl-4 pr-4\">\r\n                <div className=\"row\">\r\n                    <button className=\" col btn btn-info mx-1\" onClick={() => SortbyName(subscritors)}>Sort by name </button>\r\n                    <button className=\"col btn btn-secondary mx-1\" onClick={() => SortbyAge(subscritors)}>Sort by age </button>\r\n                    <button className=\"col btn btn-success mx-1\" onClick={() => SortbySport(subscritors)}>Sort by sport </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Fetch;","\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport React,{useState,useEffect} from 'react'\r\nimport Table from './components/Table'\r\nimport axios from 'axios'\r\nimport Fetch from './components/Fetch';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <>\r\n  <Fetch />\r\n  </>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}